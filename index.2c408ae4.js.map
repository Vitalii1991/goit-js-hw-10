{"mappings":"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","sources":["src/js/cat-api.js","src/js/index.js","node_modules/slim-select/dist/slimselect.umd.js"],"sourcesContent":["const BASE_URL = 'https://api.thecatapi.com/v1/breeds';\nconst FULL_INFO_URL = 'https://api.thecatapi.com/v1/images/search';\nconst API_KEY =\n  'live_h4rXP6k712FItPzlv4CzVENgeHJjXm6PhC2qqHs9ALeUyqOD7G0DJszHUDH4miQN';\n\nexport function fetchBreeds() {\n  return fetch(BASE_URL, {\n    headers: { 'x-api-key': API_KEY },\n  }).then(resp => {\n    if (!resp.ok) {\n      throw new Error(resp.statusText);\n    }\n\n    return resp.json();\n  });\n}\n\nexport function fetchCatByBreed(breedId) {\n  const URL = `${FULL_INFO_URL}?breed_ids=${breedId}`;\n\n  return fetch(URL).then(resp => {\n    if (!resp.ok) {\n      throw new Error(resp.statusText);\n    }\n\n    return resp.json();\n  });\n}\n","import { fetchBreeds } from './cat-api';\nimport { fetchCatByBreed } from './cat-api';\nimport SlimSelect from 'slim-select';\n\nnew SlimSelect({\n  select: '#single',\n});\n\nconst refs = {\n  breedSelect: document.querySelector('.breed-select'),\n  catInfo: document.querySelector('.cat-info'),\n  loader: document.querySelector('.loader'),\n  error: document.querySelector('.error'),\n};\n\nlet isFirstClick = true;\n\nrefs.breedSelect.addEventListener('click', onClickBreedSelect);\nrefs.breedSelect.addEventListener('change', onSelectBreed);\n\nfetchBreeds()\n  .then(data => {\n    console.log(data);\n\n    if (data) {\n      refs.loader.textContent = '';\n      refs.error.textContent = '';\n\n      createMarkup(data);\n      refs.breedSelect.insertAdjacentHTML('beforeend', createMarkup(data));\n    }\n  })\n  .catch(err => console.log(err));\n\nfunction createMarkup(data) {\n  return data\n    .map(({ id, name }) => {\n      return `<option value=${id}>${name}</option>`;\n    })\n    .join('');\n}\n\nfunction onClickBreedSelect() {\n  isFirstClick = false;\n}\n\nfunction onSelectBreed(e) {\n  if (!isFirstClick) {\n    const breedId = e.target.value;\n\n    fetchCatByBreed(breedId)\n      .then(data => {\n        console.log(data);\n\n        const urlPicture = data[0].url;\n        const markup = `<img src=\"${urlPicture}\" alt=\"cat\"\"></img>`;\n\n        refs.catInfo.innerHTML = markup;\n      })\n      .catch(err => console.log(err));\n  }\n}\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.SlimSelect = factory());\n})(this, (function () { 'use strict';\n\n    function generateID() {\n        return Math.random().toString(36).substring(2, 10);\n    }\n    function hasClassInTree(element, className) {\n        function hasClass(e, c) {\n            if (c && e && e.classList && e.classList.contains(c)) {\n                return e;\n            }\n            if (c && e && e.dataset && e.dataset.id && e.dataset.id === className) {\n                return e;\n            }\n            return null;\n        }\n        function parentByClass(e, c) {\n            if (!e || e === document) {\n                return null;\n            }\n            else if (hasClass(e, c)) {\n                return e;\n            }\n            else {\n                return parentByClass(e.parentNode, c);\n            }\n        }\n        return hasClass(element, className) || parentByClass(element, className);\n    }\n    function debounce(func, wait = 50, immediate = false) {\n        let timeout;\n        return function (...args) {\n            const context = self;\n            const later = () => {\n                timeout = null;\n                if (!immediate) {\n                    func.apply(context, args);\n                }\n            };\n            const callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) {\n                func.apply(context, args);\n            }\n        };\n    }\n    function isEqual(a, b) {\n        return JSON.stringify(a) === JSON.stringify(b);\n    }\n    function kebabCase(str) {\n        const result = str.replace(/[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g, (match) => '-' + match.toLowerCase());\n        return str[0] === str[0].toUpperCase() ? result.substring(1) : result;\n    }\n\n    class Settings {\n        constructor(settings) {\n            this.id = '';\n            this.style = '';\n            this.class = [];\n            this.isMultiple = false;\n            this.isOpen = false;\n            this.isFullOpen = false;\n            this.intervalMove = null;\n            if (!settings) {\n                settings = {};\n            }\n            this.id = 'ss-' + generateID();\n            this.style = settings.style || '';\n            this.class = settings.class || [];\n            this.disabled = settings.disabled !== undefined ? settings.disabled : false;\n            this.alwaysOpen = settings.alwaysOpen !== undefined ? settings.alwaysOpen : false;\n            this.showSearch = settings.showSearch !== undefined ? settings.showSearch : true;\n            this.searchPlaceholder = settings.searchPlaceholder || 'Search';\n            this.searchText = settings.searchText || 'No Results';\n            this.searchingText = settings.searchingText || 'Searching...';\n            this.searchHighlight = settings.searchHighlight !== undefined ? settings.searchHighlight : false;\n            this.closeOnSelect = settings.closeOnSelect !== undefined ? settings.closeOnSelect : true;\n            this.contentLocation = settings.contentLocation || document.body;\n            this.contentPosition = settings.contentPosition || 'absolute';\n            this.openPosition = settings.openPosition || 'auto';\n            this.placeholderText = settings.placeholderText !== undefined ? settings.placeholderText : 'Select Value';\n            this.allowDeselect = settings.allowDeselect !== undefined ? settings.allowDeselect : false;\n            this.hideSelected = settings.hideSelected !== undefined ? settings.hideSelected : false;\n            this.showOptionTooltips = settings.showOptionTooltips !== undefined ? settings.showOptionTooltips : false;\n            this.minSelected = settings.minSelected || 0;\n            this.maxSelected = settings.maxSelected || 1000;\n            this.timeoutDelay = settings.timeoutDelay || 200;\n            this.maxValuesShown = settings.maxValuesShown || 20;\n            this.maxValuesMessage = settings.maxValuesMessage || '{number} selected';\n        }\n    }\n\n    class Optgroup {\n        constructor(optgroup) {\n            this.id = !optgroup.id || optgroup.id === '' ? generateID() : optgroup.id;\n            this.label = optgroup.label || '';\n            this.selectAll = optgroup.selectAll === undefined ? false : optgroup.selectAll;\n            this.closable = optgroup.closable || 'off';\n            this.options = [];\n            if (optgroup.options) {\n                for (const o of optgroup.options) {\n                    this.options.push(new Option(o));\n                }\n            }\n        }\n    }\n    class Option {\n        constructor(option) {\n            this.id = !option.id || option.id === '' ? generateID() : option.id;\n            this.value = option.value === undefined ? option.text : option.value;\n            this.text = option.text || '';\n            this.html = option.html || '';\n            this.selected = option.selected !== undefined ? option.selected : false;\n            this.display = option.display !== undefined ? option.display : true;\n            this.disabled = option.disabled !== undefined ? option.disabled : false;\n            this.mandatory = option.mandatory !== undefined ? option.mandatory : false;\n            this.placeholder = option.placeholder !== undefined ? option.placeholder : false;\n            this.class = option.class || '';\n            this.style = option.style || '';\n            this.data = option.data || {};\n        }\n    }\n    class Store {\n        constructor(type, data) {\n            this.selectType = 'single';\n            this.data = [];\n            this.selectType = type;\n            this.setData(data);\n        }\n        validateDataArray(data) {\n            if (!Array.isArray(data)) {\n                return new Error('Data must be an array');\n            }\n            for (let dataObj of data) {\n                if (dataObj instanceof Optgroup || 'label' in dataObj) {\n                    if (!('label' in dataObj)) {\n                        return new Error('Optgroup must have a label');\n                    }\n                    if ('options' in dataObj && dataObj.options) {\n                        for (let option of dataObj.options) {\n                            return this.validateOption(option);\n                        }\n                    }\n                }\n                else if (dataObj instanceof Option || 'text' in dataObj) {\n                    return this.validateOption(dataObj);\n                }\n                else {\n                    return new Error('Data object must be a valid optgroup or option');\n                }\n            }\n            return null;\n        }\n        validateOption(option) {\n            if (!('text' in option)) {\n                return new Error('Option must have a text');\n            }\n            return null;\n        }\n        partialToFullData(data) {\n            let dataFinal = [];\n            data.forEach((dataObj) => {\n                if (dataObj instanceof Optgroup || 'label' in dataObj) {\n                    let optOptions = [];\n                    if ('options' in dataObj && dataObj.options) {\n                        dataObj.options.forEach((option) => {\n                            optOptions.push(new Option(option));\n                        });\n                    }\n                    if (optOptions.length > 0) {\n                        dataFinal.push(new Optgroup(dataObj));\n                    }\n                }\n                if (dataObj instanceof Option || 'text' in dataObj) {\n                    dataFinal.push(new Option(dataObj));\n                }\n            });\n            return dataFinal;\n        }\n        setData(data) {\n            this.data = this.partialToFullData(data);\n            if (this.selectType === 'single') {\n                this.setSelectedBy('value', this.getSelected());\n            }\n        }\n        getData() {\n            return this.filter(null, true);\n        }\n        getDataOptions() {\n            return this.filter(null, false);\n        }\n        addOption(option) {\n            this.setData(this.getData().concat(new Option(option)));\n        }\n        setSelectedBy(selectedType, selectedValues) {\n            let firstOption = null;\n            let hasSelected = false;\n            for (let dataObj of this.data) {\n                if (dataObj instanceof Optgroup) {\n                    for (let option of dataObj.options) {\n                        if (!firstOption) {\n                            firstOption = option;\n                        }\n                        option.selected = hasSelected ? false : selectedValues.includes(option[selectedType]);\n                        if (option.selected && this.selectType === 'single') {\n                            hasSelected = true;\n                        }\n                    }\n                }\n                if (dataObj instanceof Option) {\n                    if (!firstOption) {\n                        firstOption = dataObj;\n                    }\n                    dataObj.selected = hasSelected ? false : selectedValues.includes(dataObj[selectedType]);\n                    if (dataObj.selected && this.selectType === 'single') {\n                        hasSelected = true;\n                    }\n                }\n            }\n            if (this.selectType === 'single' && firstOption && !hasSelected) {\n                firstOption.selected = true;\n            }\n        }\n        getSelected() {\n            let selectedOptions = this.getSelectedOptions();\n            let selectedValues = [];\n            selectedOptions.forEach((option) => {\n                selectedValues.push(option.value);\n            });\n            return selectedValues;\n        }\n        getSelectedOptions() {\n            return this.filter((opt) => {\n                return opt.selected;\n            }, false);\n        }\n        getSelectedIDs() {\n            let selectedOptions = this.getSelectedOptions();\n            let selectedIDs = [];\n            selectedOptions.forEach((op) => {\n                selectedIDs.push(op.id);\n            });\n            return selectedIDs;\n        }\n        getOptgroupByID(id) {\n            for (let dataObj of this.data) {\n                if (dataObj instanceof Optgroup && dataObj.id === id) {\n                    return dataObj;\n                }\n            }\n            return null;\n        }\n        getOptionByID(id) {\n            let options = this.filter((opt) => {\n                return opt.id === id;\n            }, false);\n            return options.length ? options[0] : null;\n        }\n        search(search, searchFilter) {\n            search = search.trim();\n            if (search === '') {\n                return this.getData();\n            }\n            return this.filter((opt) => {\n                return searchFilter(opt, search);\n            }, true);\n        }\n        filter(filter, includeOptgroup) {\n            const dataSearch = [];\n            this.data.forEach((dataObj) => {\n                if (dataObj instanceof Optgroup) {\n                    let optOptions = [];\n                    dataObj.options.forEach((option) => {\n                        if (!filter || filter(option)) {\n                            if (!includeOptgroup) {\n                                dataSearch.push(new Option(option));\n                            }\n                            else {\n                                optOptions.push(new Option(option));\n                            }\n                        }\n                    });\n                    if (optOptions.length > 0) {\n                        let optgroup = new Optgroup(dataObj);\n                        optgroup.options = optOptions;\n                        dataSearch.push(optgroup);\n                    }\n                }\n                if (dataObj instanceof Option) {\n                    if (!filter || filter(dataObj)) {\n                        dataSearch.push(new Option(dataObj));\n                    }\n                }\n            });\n            return dataSearch;\n        }\n        getSelectType() {\n            return this.selectType;\n        }\n    }\n\n    class Render {\n        constructor(settings, store, callbacks) {\n            this.classes = {\n                main: 'ss-main',\n                placeholder: 'ss-placeholder',\n                values: 'ss-values',\n                single: 'ss-single',\n                max: 'ss-max',\n                value: 'ss-value',\n                valueText: 'ss-value-text',\n                valueDelete: 'ss-value-delete',\n                valueOut: 'ss-value-out',\n                deselect: 'ss-deselect',\n                deselectPath: 'M10,10 L90,90 M10,90 L90,10',\n                arrow: 'ss-arrow',\n                arrowClose: 'M10,30 L50,70 L90,30',\n                arrowOpen: 'M10,70 L50,30 L90,70',\n                content: 'ss-content',\n                openAbove: 'ss-open-above',\n                openBelow: 'ss-open-below',\n                search: 'ss-search',\n                searchHighlighter: 'ss-search-highlight',\n                searching: 'ss-searching',\n                addable: 'ss-addable',\n                addablePath: 'M50,10 L50,90 M10,50 L90,50',\n                list: 'ss-list',\n                optgroup: 'ss-optgroup',\n                optgroupLabel: 'ss-optgroup-label',\n                optgroupLabelText: 'ss-optgroup-label-text',\n                optgroupActions: 'ss-optgroup-actions',\n                optgroupSelectAll: 'ss-selectall',\n                optgroupSelectAllBox: 'M60,10 L10,10 L10,90 L90,90 L90,50',\n                optgroupSelectAllCheck: 'M30,45 L50,70 L90,10',\n                optgroupClosable: 'ss-closable',\n                option: 'ss-option',\n                optionDelete: 'M10,10 L90,90 M10,90 L90,10',\n                highlighted: 'ss-highlighted',\n                open: 'ss-open',\n                close: 'ss-close',\n                selected: 'ss-selected',\n                error: 'ss-error',\n                disabled: 'ss-disabled',\n                hide: 'ss-hide',\n            };\n            this.store = store;\n            this.settings = settings;\n            this.callbacks = callbacks;\n            this.main = this.mainDiv();\n            this.content = this.contentDiv();\n            this.updateClassStyles();\n            this.updateAriaAttributes();\n            this.settings.contentLocation.appendChild(this.content.main);\n        }\n        enable() {\n            this.main.main.classList.remove(this.classes.disabled);\n            this.content.search.input.disabled = false;\n        }\n        disable() {\n            this.main.main.classList.add(this.classes.disabled);\n            this.content.search.input.disabled = true;\n        }\n        open() {\n            this.main.arrow.path.setAttribute('d', this.classes.arrowOpen);\n            this.main.main.classList.add(this.settings.openPosition === 'up' ? this.classes.openAbove : this.classes.openBelow);\n            this.main.main.setAttribute('aria-expanded', 'true');\n            this.moveContent();\n            const selectedOptions = this.store.getSelectedOptions();\n            if (selectedOptions.length) {\n                const selectedId = selectedOptions[selectedOptions.length - 1].id;\n                const selectedOption = this.content.list.querySelector('[data-id=\"' + selectedId + '\"]');\n                if (selectedOption) {\n                    this.ensureElementInView(this.content.list, selectedOption);\n                }\n            }\n        }\n        close() {\n            this.main.main.classList.remove(this.classes.openAbove);\n            this.main.main.classList.remove(this.classes.openBelow);\n            this.main.main.setAttribute('aria-expanded', 'false');\n            this.content.main.classList.remove(this.classes.openAbove);\n            this.content.main.classList.remove(this.classes.openBelow);\n            this.main.arrow.path.setAttribute('d', this.classes.arrowClose);\n        }\n        updateClassStyles() {\n            this.main.main.className = '';\n            this.main.main.removeAttribute('style');\n            this.content.main.className = '';\n            this.content.main.removeAttribute('style');\n            this.main.main.classList.add(this.classes.main);\n            this.content.main.classList.add(this.classes.content);\n            if (this.settings.style !== '') {\n                this.main.main.style.cssText = this.settings.style;\n                this.content.main.style.cssText = this.settings.style;\n            }\n            if (this.settings.class.length) {\n                for (const c of this.settings.class) {\n                    if (c.trim() !== '') {\n                        this.main.main.classList.add(c.trim());\n                        this.content.main.classList.add(c.trim());\n                    }\n                }\n            }\n            if (this.settings.contentPosition === 'relative') {\n                this.content.main.classList.add('ss-' + this.settings.contentPosition);\n            }\n        }\n        updateAriaAttributes() {\n            this.main.main.role = 'combobox';\n            this.main.main.setAttribute('aria-haspopup', 'listbox');\n            this.main.main.setAttribute('aria-controls', this.content.main.id);\n            this.main.main.setAttribute('aria-expanded', 'false');\n            this.content.main.setAttribute('role', 'listbox');\n        }\n        mainDiv() {\n            var _a;\n            const main = document.createElement('div');\n            main.dataset.id = this.settings.id;\n            main.id = this.settings.id;\n            main.tabIndex = 0;\n            main.onkeydown = (e) => {\n                switch (e.key) {\n                    case 'ArrowUp':\n                    case 'ArrowDown':\n                        this.callbacks.open();\n                        e.key === 'ArrowDown' ? this.highlight('down') : this.highlight('up');\n                        return false;\n                    case 'Tab':\n                        this.callbacks.close();\n                        return true;\n                    case 'Enter':\n                    case ' ':\n                        this.callbacks.open();\n                        const highlighted = this.content.list.querySelector('.' + this.classes.highlighted);\n                        if (highlighted) {\n                            highlighted.click();\n                        }\n                        return false;\n                    case 'Escape':\n                        this.callbacks.close();\n                        return false;\n                }\n            };\n            main.onclick = (e) => {\n                if (this.settings.disabled) {\n                    return;\n                }\n                this.settings.isOpen ? this.callbacks.close() : this.callbacks.open();\n            };\n            const values = document.createElement('div');\n            values.classList.add(this.classes.values);\n            main.appendChild(values);\n            const deselect = document.createElement('div');\n            deselect.classList.add(this.classes.deselect);\n            const selectedOptions = (_a = this.store) === null || _a === void 0 ? void 0 : _a.getSelectedOptions();\n            if (!this.settings.allowDeselect || (this.settings.isMultiple && selectedOptions && selectedOptions.length <= 0)) {\n                deselect.classList.add(this.classes.hide);\n            }\n            else {\n                deselect.classList.remove(this.classes.hide);\n            }\n            deselect.onclick = (e) => {\n                e.stopPropagation();\n                if (this.settings.disabled) {\n                    return;\n                }\n                let shouldDelete = true;\n                const before = this.store.getSelectedOptions();\n                const after = [];\n                if (this.callbacks.beforeChange) {\n                    shouldDelete = this.callbacks.beforeChange(after, before) === true;\n                }\n                if (shouldDelete) {\n                    if (this.settings.isMultiple) {\n                        this.callbacks.setSelected([], false);\n                        this.updateDeselectAll();\n                    }\n                    else {\n                        this.callbacks.setSelected([''], false);\n                    }\n                    if (this.settings.closeOnSelect) {\n                        this.callbacks.close();\n                    }\n                    if (this.callbacks.afterChange) {\n                        this.callbacks.afterChange(after);\n                    }\n                }\n            };\n            const deselectSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            deselectSvg.setAttribute('viewBox', '0 0 100 100');\n            const deselectPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            deselectPath.setAttribute('d', this.classes.deselectPath);\n            deselectSvg.appendChild(deselectPath);\n            deselect.appendChild(deselectSvg);\n            main.appendChild(deselect);\n            const arrow = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n            arrow.classList.add(this.classes.arrow);\n            arrow.setAttribute('viewBox', '0 0 100 100');\n            const arrowPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            arrowPath.setAttribute('d', this.classes.arrowClose);\n            if (this.settings.alwaysOpen) {\n                arrow.classList.add(this.classes.hide);\n            }\n            arrow.appendChild(arrowPath);\n            main.appendChild(arrow);\n            return {\n                main: main,\n                values: values,\n                deselect: {\n                    main: deselect,\n                    svg: deselectSvg,\n                    path: deselectPath,\n                },\n                arrow: {\n                    main: arrow,\n                    path: arrowPath,\n                },\n            };\n        }\n        mainFocus(eventType) {\n            if (eventType !== 'click') {\n                this.main.main.focus({ preventScroll: true });\n            }\n        }\n        placeholder() {\n            const placeholderOption = this.store.filter((o) => o.placeholder, false);\n            let placeholderText = this.settings.placeholderText;\n            if (placeholderOption.length) {\n                if (placeholderOption[0].html !== '') {\n                    placeholderText = placeholderOption[0].html;\n                }\n                else if (placeholderOption[0].text !== '') {\n                    placeholderText = placeholderOption[0].text;\n                }\n            }\n            const placeholder = document.createElement('div');\n            placeholder.classList.add(this.classes.placeholder);\n            placeholder.innerHTML = placeholderText;\n            return placeholder;\n        }\n        renderValues() {\n            if (!this.settings.isMultiple) {\n                this.renderSingleValue();\n                return;\n            }\n            this.renderMultipleValues();\n        }\n        renderSingleValue() {\n            const selected = this.store.filter((o) => {\n                return o.selected && !o.placeholder;\n            }, false);\n            const selectedSingle = selected.length > 0 ? selected[0] : null;\n            if (!selectedSingle) {\n                this.main.values.innerHTML = this.placeholder().outerHTML;\n            }\n            else {\n                const singleValue = document.createElement('div');\n                singleValue.classList.add(this.classes.single);\n                if (selectedSingle.html) {\n                    singleValue.innerHTML = selectedSingle.html;\n                }\n                else {\n                    singleValue.innerText = selectedSingle.text;\n                }\n                this.main.values.innerHTML = singleValue.outerHTML;\n            }\n            if (!this.settings.allowDeselect || !selected.length) {\n                this.main.deselect.main.classList.add(this.classes.hide);\n            }\n            else {\n                this.main.deselect.main.classList.remove(this.classes.hide);\n            }\n        }\n        renderMultipleValues() {\n            let currentNodes = this.main.values.childNodes;\n            let selectedOptions = this.store.filter((opt) => {\n                return opt.selected && opt.display;\n            }, false);\n            if (selectedOptions.length === 0) {\n                this.main.values.innerHTML = this.placeholder().outerHTML;\n                return;\n            }\n            else {\n                const placeholder = this.main.values.querySelector('.' + this.classes.placeholder);\n                if (placeholder) {\n                    placeholder.remove();\n                }\n            }\n            if (selectedOptions.length > this.settings.maxValuesShown) {\n                const singleValue = document.createElement('div');\n                singleValue.classList.add(this.classes.max);\n                singleValue.textContent = this.settings.maxValuesMessage.replace('{number}', selectedOptions.length.toString());\n                this.main.values.innerHTML = singleValue.outerHTML;\n                return;\n            }\n            else {\n                const maxValuesMessage = this.main.values.querySelector('.' + this.classes.max);\n                if (maxValuesMessage) {\n                    maxValuesMessage.remove();\n                }\n            }\n            let removeNodes = [];\n            for (let i = 0; i < currentNodes.length; i++) {\n                const node = currentNodes[i];\n                const id = node.getAttribute('data-id');\n                if (id) {\n                    const found = selectedOptions.filter((opt) => {\n                        return opt.id === id;\n                    }, false);\n                    if (!found.length) {\n                        removeNodes.push(node);\n                    }\n                }\n            }\n            for (const n of removeNodes) {\n                n.classList.add(this.classes.valueOut);\n                setTimeout(() => {\n                    if (this.main.values.hasChildNodes() && this.main.values.contains(n)) {\n                        this.main.values.removeChild(n);\n                    }\n                }, 100);\n            }\n            currentNodes = this.main.values.childNodes;\n            for (let d = 0; d < selectedOptions.length; d++) {\n                let shouldAdd = true;\n                for (let i = 0; i < currentNodes.length; i++) {\n                    if (selectedOptions[d].id === String(currentNodes[i].dataset.id)) {\n                        shouldAdd = false;\n                    }\n                }\n                if (shouldAdd) {\n                    if (currentNodes.length === 0) {\n                        this.main.values.appendChild(this.multipleValue(selectedOptions[d]));\n                    }\n                    else if (d === 0) {\n                        this.main.values.insertBefore(this.multipleValue(selectedOptions[d]), currentNodes[d]);\n                    }\n                    else {\n                        currentNodes[d - 1].insertAdjacentElement('afterend', this.multipleValue(selectedOptions[d]));\n                    }\n                }\n            }\n            this.updateDeselectAll();\n        }\n        multipleValue(option) {\n            const value = document.createElement('div');\n            value.classList.add(this.classes.value);\n            value.dataset.id = option.id;\n            const text = document.createElement('div');\n            text.classList.add(this.classes.valueText);\n            text.innerText = option.text;\n            value.appendChild(text);\n            if (!option.mandatory) {\n                const deleteDiv = document.createElement('div');\n                deleteDiv.classList.add(this.classes.valueDelete);\n                deleteDiv.onclick = (e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (this.settings.disabled) {\n                        return;\n                    }\n                    let shouldDelete = true;\n                    const before = this.store.getSelectedOptions();\n                    const after = before.filter((o) => {\n                        return o.selected && o.id !== option.id;\n                    }, true);\n                    if (this.settings.minSelected && after.length < this.settings.minSelected) {\n                        return;\n                    }\n                    if (this.callbacks.beforeChange) {\n                        shouldDelete = this.callbacks.beforeChange(after, before) === true;\n                    }\n                    if (shouldDelete) {\n                        let selectedValues = [];\n                        for (const o of after) {\n                            if (o instanceof Optgroup) {\n                                for (const c of o.options) {\n                                    selectedValues.push(c.value);\n                                }\n                            }\n                            if (o instanceof Option) {\n                                selectedValues.push(o.value);\n                            }\n                        }\n                        this.callbacks.setSelected(selectedValues, false);\n                        if (this.settings.closeOnSelect) {\n                            this.callbacks.close();\n                        }\n                        if (this.callbacks.afterChange) {\n                            this.callbacks.afterChange(after);\n                        }\n                        this.updateDeselectAll();\n                    }\n                };\n                const deleteSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                deleteSvg.setAttribute('viewBox', '0 0 100 100');\n                const deletePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                deletePath.setAttribute('d', this.classes.optionDelete);\n                deleteSvg.appendChild(deletePath);\n                deleteDiv.appendChild(deleteSvg);\n                value.appendChild(deleteDiv);\n            }\n            return value;\n        }\n        contentDiv() {\n            const main = document.createElement('div');\n            main.dataset.id = this.settings.id;\n            main.id = this.settings.id;\n            const search = this.searchDiv();\n            main.appendChild(search.main);\n            const list = this.listDiv();\n            main.appendChild(list);\n            return {\n                main: main,\n                search: search,\n                list: list,\n            };\n        }\n        moveContent() {\n            if (this.settings.contentPosition === 'relative') {\n                this.moveContentBelow();\n                return;\n            }\n            if (this.settings.openPosition === 'down') {\n                this.moveContentBelow();\n                return;\n            }\n            else if (this.settings.openPosition === 'up') {\n                this.moveContentAbove();\n                return;\n            }\n            if (this.putContent() === 'up') {\n                this.moveContentAbove();\n            }\n            else {\n                this.moveContentBelow();\n            }\n        }\n        searchDiv() {\n            const main = document.createElement('div');\n            const input = document.createElement('input');\n            const addable = document.createElement('div');\n            main.classList.add(this.classes.search);\n            const searchReturn = {\n                main,\n                input,\n            };\n            if (!this.settings.showSearch) {\n                main.classList.add(this.classes.hide);\n                input.readOnly = true;\n            }\n            input.type = 'search';\n            input.placeholder = this.settings.searchPlaceholder;\n            input.tabIndex = -1;\n            input.setAttribute('aria-label', this.settings.searchPlaceholder);\n            input.setAttribute('autocapitalize', 'off');\n            input.setAttribute('autocomplete', 'off');\n            input.setAttribute('autocorrect', 'off');\n            input.oninput = debounce((e) => {\n                this.callbacks.search(e.target.value);\n            }, 100);\n            input.onkeydown = (e) => {\n                switch (e.key) {\n                    case 'ArrowUp':\n                    case 'ArrowDown':\n                        e.key === 'ArrowDown' ? this.highlight('down') : this.highlight('up');\n                        return false;\n                    case 'Tab':\n                        this.callbacks.close();\n                        return true;\n                    case 'Escape':\n                        this.callbacks.close();\n                        return false;\n                    case 'Enter':\n                    case ' ':\n                        if (this.callbacks.addable && e.ctrlKey) {\n                            addable.click();\n                            return false;\n                        }\n                        else {\n                            const highlighted = this.content.list.querySelector('.' + this.classes.highlighted);\n                            if (highlighted) {\n                                highlighted.click();\n                                return false;\n                            }\n                        }\n                        return true;\n                }\n            };\n            main.appendChild(input);\n            if (this.callbacks.addable) {\n                addable.classList.add(this.classes.addable);\n                const plus = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                plus.setAttribute('viewBox', '0 0 100 100');\n                const plusPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                plusPath.setAttribute('d', this.classes.addablePath);\n                plus.appendChild(plusPath);\n                addable.appendChild(plus);\n                addable.onclick = (e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (!this.callbacks.addable) {\n                        return;\n                    }\n                    const inputValue = this.content.search.input.value.trim();\n                    if (inputValue === '') {\n                        this.content.search.input.focus();\n                        return;\n                    }\n                    const runFinish = (oo) => {\n                        let newOption = new Option(oo);\n                        this.callbacks.addOption(newOption);\n                        if (this.settings.isMultiple) {\n                            let values = this.store.getSelected();\n                            values.push(newOption.value);\n                            this.callbacks.setSelected(values, true);\n                        }\n                        else {\n                            this.callbacks.setSelected([newOption.value], true);\n                        }\n                        this.callbacks.search('');\n                        if (this.settings.closeOnSelect) {\n                            setTimeout(() => {\n                                this.callbacks.close();\n                            }, 100);\n                        }\n                    };\n                    const addableValue = this.callbacks.addable(inputValue);\n                    if (addableValue === false || addableValue === undefined || addableValue === null) {\n                        return;\n                    }\n                    if (addableValue instanceof Promise) {\n                        addableValue.then((value) => {\n                            if (typeof value === 'string') {\n                                runFinish({\n                                    text: value,\n                                    value: value,\n                                });\n                            }\n                            else {\n                                runFinish(value);\n                            }\n                        });\n                    }\n                    else if (typeof addableValue === 'string') {\n                        runFinish({\n                            text: addableValue,\n                            value: addableValue,\n                        });\n                    }\n                    else {\n                        runFinish(addableValue);\n                    }\n                    return;\n                };\n                main.appendChild(addable);\n                searchReturn.addable = {\n                    main: addable,\n                    svg: plus,\n                    path: plusPath,\n                };\n            }\n            return searchReturn;\n        }\n        searchFocus() {\n            this.content.search.input.focus();\n        }\n        getOptions(notPlaceholder = false, notDisabled = false, notHidden = false) {\n            let query = '.' + this.classes.option;\n            if (notPlaceholder) {\n                query += ':not(.' + this.classes.placeholder + ')';\n            }\n            if (notDisabled) {\n                query += ':not(.' + this.classes.disabled + ')';\n            }\n            if (notHidden) {\n                query += ':not(.' + this.classes.hide + ')';\n            }\n            return Array.from(this.content.list.querySelectorAll(query));\n        }\n        highlight(dir) {\n            const options = this.getOptions(true, true, true);\n            if (options.length === 0) {\n                return;\n            }\n            if (options.length === 1) {\n                if (!options[0].classList.contains(this.classes.highlighted)) {\n                    options[0].classList.add(this.classes.highlighted);\n                    return;\n                }\n            }\n            for (let i = 0; i < options.length; i++) {\n                if (options[i].classList.contains(this.classes.highlighted)) {\n                    const prevOption = options[i];\n                    prevOption.classList.remove(this.classes.highlighted);\n                    const prevParent = prevOption.parentElement;\n                    if (prevParent && prevParent.classList.contains(this.classes.open)) {\n                        const optgroupLabel = prevParent.querySelector('.' + this.classes.optgroupLabel);\n                        if (optgroupLabel) {\n                            optgroupLabel.click();\n                        }\n                    }\n                    let selectOption = options[dir === 'down' ? (i + 1 < options.length ? i + 1 : 0) : i - 1 >= 0 ? i - 1 : options.length - 1];\n                    selectOption.classList.add(this.classes.highlighted);\n                    this.ensureElementInView(this.content.list, selectOption);\n                    const selectParent = selectOption.parentElement;\n                    if (selectParent && selectParent.classList.contains(this.classes.close)) {\n                        const optgroupLabel = selectParent.querySelector('.' + this.classes.optgroupLabel);\n                        if (optgroupLabel) {\n                            optgroupLabel.click();\n                        }\n                    }\n                    return;\n                }\n            }\n            options[dir === 'down' ? 0 : options.length - 1].classList.add(this.classes.highlighted);\n            this.ensureElementInView(this.content.list, options[dir === 'down' ? 0 : options.length - 1]);\n        }\n        listDiv() {\n            const options = document.createElement('div');\n            options.classList.add(this.classes.list);\n            return options;\n        }\n        renderError(error) {\n            this.content.list.innerHTML = '';\n            const errorDiv = document.createElement('div');\n            errorDiv.classList.add(this.classes.error);\n            errorDiv.textContent = error;\n            this.content.list.appendChild(errorDiv);\n        }\n        renderSearching() {\n            this.content.list.innerHTML = '';\n            const searchingDiv = document.createElement('div');\n            searchingDiv.classList.add(this.classes.searching);\n            searchingDiv.textContent = this.settings.searchingText;\n            this.content.list.appendChild(searchingDiv);\n        }\n        renderOptions(data) {\n            this.content.list.innerHTML = '';\n            if (data.length === 0) {\n                const noResults = document.createElement('div');\n                noResults.classList.add(this.classes.search);\n                noResults.innerHTML = this.settings.searchText;\n                this.content.list.appendChild(noResults);\n                return;\n            }\n            for (const d of data) {\n                if (d instanceof Optgroup) {\n                    const optgroupEl = document.createElement('div');\n                    optgroupEl.classList.add(this.classes.optgroup);\n                    const optgroupLabel = document.createElement('div');\n                    optgroupLabel.classList.add(this.classes.optgroupLabel);\n                    optgroupEl.appendChild(optgroupLabel);\n                    const optgroupLabelText = document.createElement('div');\n                    optgroupLabelText.classList.add(this.classes.optgroupLabelText);\n                    optgroupLabelText.textContent = d.label;\n                    optgroupLabel.appendChild(optgroupLabelText);\n                    const optgroupActions = document.createElement('div');\n                    optgroupActions.classList.add(this.classes.optgroupActions);\n                    optgroupLabel.appendChild(optgroupActions);\n                    if (this.settings.isMultiple && d.selectAll) {\n                        const selectAll = document.createElement('div');\n                        selectAll.classList.add(this.classes.optgroupSelectAll);\n                        let allSelected = true;\n                        for (const o of d.options) {\n                            if (!o.selected) {\n                                allSelected = false;\n                                break;\n                            }\n                        }\n                        if (allSelected) {\n                            selectAll.classList.add(this.classes.selected);\n                        }\n                        const selectAllText = document.createElement('span');\n                        selectAllText.textContent = 'Select All';\n                        selectAll.appendChild(selectAllText);\n                        const selectAllSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                        selectAllSvg.setAttribute('viewBox', '0 0 100 100');\n                        selectAll.appendChild(selectAllSvg);\n                        const selectAllBox = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        selectAllBox.setAttribute('d', this.classes.optgroupSelectAllBox);\n                        selectAllSvg.appendChild(selectAllBox);\n                        const selectAllCheck = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        selectAllCheck.setAttribute('d', this.classes.optgroupSelectAllCheck);\n                        selectAllSvg.appendChild(selectAllCheck);\n                        selectAll.addEventListener('click', (e) => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            const currentSelected = this.store.getSelected();\n                            if (allSelected) {\n                                const newSelected = currentSelected.filter((s) => {\n                                    for (const o of d.options) {\n                                        if (s === o.value) {\n                                            return false;\n                                        }\n                                    }\n                                    return true;\n                                });\n                                this.callbacks.setSelected(newSelected, true);\n                                return;\n                            }\n                            else {\n                                const newSelected = currentSelected.concat(d.options.map((o) => o.value));\n                                this.callbacks.setSelected(newSelected, true);\n                            }\n                        });\n                        optgroupActions.appendChild(selectAll);\n                    }\n                    if (d.closable !== 'off') {\n                        const optgroupClosable = document.createElement('div');\n                        optgroupClosable.classList.add(this.classes.optgroupClosable);\n                        const optgroupClosableSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                        optgroupClosableSvg.setAttribute('viewBox', '0 0 100 100');\n                        optgroupClosableSvg.classList.add(this.classes.arrow);\n                        optgroupClosable.appendChild(optgroupClosableSvg);\n                        const optgroupClosableArrow = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                        optgroupClosableSvg.appendChild(optgroupClosableArrow);\n                        if (d.options.some((o) => o.selected) || this.content.search.input.value.trim() !== '') {\n                            optgroupClosable.classList.add(this.classes.open);\n                            optgroupClosableArrow.setAttribute('d', this.classes.arrowOpen);\n                        }\n                        else if (d.closable === 'open') {\n                            optgroupEl.classList.add(this.classes.open);\n                            optgroupClosableArrow.setAttribute('d', this.classes.arrowOpen);\n                        }\n                        else if (d.closable === 'close') {\n                            optgroupEl.classList.add(this.classes.close);\n                            optgroupClosableArrow.setAttribute('d', this.classes.arrowClose);\n                        }\n                        optgroupLabel.addEventListener('click', (e) => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            if (optgroupEl.classList.contains(this.classes.close)) {\n                                optgroupEl.classList.remove(this.classes.close);\n                                optgroupEl.classList.add(this.classes.open);\n                                optgroupClosableArrow.setAttribute('d', this.classes.arrowOpen);\n                            }\n                            else {\n                                optgroupEl.classList.remove(this.classes.open);\n                                optgroupEl.classList.add(this.classes.close);\n                                optgroupClosableArrow.setAttribute('d', this.classes.arrowClose);\n                            }\n                        });\n                        optgroupActions.appendChild(optgroupClosable);\n                    }\n                    optgroupEl.appendChild(optgroupLabel);\n                    for (const o of d.options) {\n                        optgroupEl.appendChild(this.option(o));\n                    }\n                    this.content.list.appendChild(optgroupEl);\n                }\n                if (d instanceof Option) {\n                    this.content.list.appendChild(this.option(d));\n                }\n            }\n        }\n        option(option) {\n            if (option.placeholder) {\n                const placeholder = document.createElement('div');\n                placeholder.classList.add(this.classes.option);\n                placeholder.classList.add(this.classes.hide);\n                return placeholder;\n            }\n            const optionEl = document.createElement('div');\n            optionEl.dataset.id = option.id;\n            optionEl.id = option.id;\n            optionEl.classList.add(this.classes.option);\n            optionEl.setAttribute('role', 'option');\n            if (option.class) {\n                option.class.split(' ').forEach((dataClass) => {\n                    optionEl.classList.add(dataClass);\n                });\n            }\n            if (option.style) {\n                optionEl.style.cssText = option.style;\n            }\n            if (this.settings.searchHighlight && this.content.search.input.value.trim() !== '') {\n                optionEl.innerHTML = this.highlightText(option.html !== '' ? option.html : option.text, this.content.search.input.value, this.classes.searchHighlighter);\n            }\n            else if (option.html !== '') {\n                optionEl.innerHTML = option.html;\n            }\n            else {\n                optionEl.textContent = option.text;\n            }\n            if (this.settings.showOptionTooltips && optionEl.textContent) {\n                optionEl.setAttribute('title', optionEl.textContent);\n            }\n            if (!option.display) {\n                optionEl.classList.add(this.classes.hide);\n            }\n            if (option.disabled) {\n                optionEl.classList.add(this.classes.disabled);\n            }\n            if (option.selected && this.settings.hideSelected) {\n                optionEl.classList.add(this.classes.hide);\n            }\n            if (option.selected) {\n                optionEl.classList.add(this.classes.selected);\n                optionEl.setAttribute('aria-selected', 'true');\n                this.main.main.setAttribute('aria-activedescendant', optionEl.id);\n            }\n            else {\n                optionEl.classList.remove(this.classes.selected);\n                optionEl.setAttribute('aria-selected', 'false');\n            }\n            optionEl.addEventListener('click', (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                const selectedOptions = this.store.getSelected();\n                const element = e.currentTarget;\n                const elementID = String(element.dataset.id);\n                if (option.disabled || (option.selected && !this.settings.allowDeselect)) {\n                    return;\n                }\n                if ((this.settings.isMultiple && this.settings.maxSelected <= selectedOptions.length && !option.selected) ||\n                    (this.settings.isMultiple && this.settings.minSelected >= selectedOptions.length && option.selected)) {\n                    return;\n                }\n                let shouldUpdate = false;\n                const before = this.store.getSelectedOptions();\n                let after = [];\n                if (this.settings.isMultiple) {\n                    if (option.selected) {\n                        after = before.filter((o) => o.id !== elementID);\n                    }\n                    else {\n                        after = before.concat(option);\n                    }\n                }\n                if (!this.settings.isMultiple) {\n                    if (option.selected) {\n                        after = [];\n                    }\n                    else {\n                        after = [option];\n                    }\n                }\n                if (!this.callbacks.beforeChange) {\n                    shouldUpdate = true;\n                }\n                if (this.callbacks.beforeChange) {\n                    if (this.callbacks.beforeChange(after, before) === false) {\n                        shouldUpdate = false;\n                    }\n                    else {\n                        shouldUpdate = true;\n                    }\n                }\n                if (shouldUpdate) {\n                    if (!this.store.getOptionByID(elementID)) {\n                        this.callbacks.addOption(option);\n                    }\n                    this.callbacks.setSelected(after.map((o) => o.value), false);\n                    if (this.settings.closeOnSelect) {\n                        this.callbacks.close();\n                    }\n                    if (this.callbacks.afterChange) {\n                        this.callbacks.afterChange(after);\n                    }\n                }\n            });\n            return optionEl;\n        }\n        destroy() {\n            this.main.main.remove();\n            this.content.main.remove();\n        }\n        highlightText(str, search, className) {\n            let completedString = str;\n            const regex = new RegExp('(' + search.trim() + ')(?![^<]*>[^<>]*</)', 'i');\n            if (!str.match(regex)) {\n                return str;\n            }\n            const matchStartPosition = str.match(regex).index;\n            const matchEndPosition = matchStartPosition + str.match(regex)[0].toString().length;\n            const originalTextFoundByRegex = str.substring(matchStartPosition, matchEndPosition);\n            completedString = completedString.replace(regex, `<mark class=\"${className}\">${originalTextFoundByRegex}</mark>`);\n            return completedString;\n        }\n        moveContentAbove() {\n            const mainHeight = this.main.main.offsetHeight;\n            const contentHeight = this.content.main.offsetHeight;\n            this.main.main.classList.remove(this.classes.openBelow);\n            this.main.main.classList.add(this.classes.openAbove);\n            this.content.main.classList.remove(this.classes.openBelow);\n            this.content.main.classList.add(this.classes.openAbove);\n            const containerRect = this.main.main.getBoundingClientRect();\n            this.content.main.style.margin = '-' + (mainHeight + contentHeight - 1) + 'px 0px 0px 0px';\n            this.content.main.style.top = containerRect.top + containerRect.height + window.scrollY + 'px';\n            this.content.main.style.left = containerRect.left + window.scrollX + 'px';\n            this.content.main.style.width = containerRect.width + 'px';\n        }\n        moveContentBelow() {\n            this.main.main.classList.remove(this.classes.openAbove);\n            this.main.main.classList.add(this.classes.openBelow);\n            this.content.main.classList.remove(this.classes.openAbove);\n            this.content.main.classList.add(this.classes.openBelow);\n            const containerRect = this.main.main.getBoundingClientRect();\n            this.content.main.style.margin = '-1px 0px 0px 0px';\n            if (this.settings.contentPosition !== 'relative') {\n                this.content.main.style.top = containerRect.top + containerRect.height + window.scrollY + 'px';\n                this.content.main.style.left = containerRect.left + window.scrollX + 'px';\n                this.content.main.style.width = containerRect.width + 'px';\n            }\n        }\n        ensureElementInView(container, element) {\n            const cTop = container.scrollTop + container.offsetTop;\n            const cBottom = cTop + container.clientHeight;\n            const eTop = element.offsetTop;\n            const eBottom = eTop + element.clientHeight;\n            if (eTop < cTop) {\n                container.scrollTop -= cTop - eTop;\n            }\n            else if (eBottom > cBottom) {\n                container.scrollTop += eBottom - cBottom;\n            }\n        }\n        putContent() {\n            const mainHeight = this.main.main.offsetHeight;\n            const mainRect = this.main.main.getBoundingClientRect();\n            const contentHeight = this.content.main.offsetHeight;\n            const spaceBelow = window.innerHeight - (mainRect.top + mainHeight);\n            if (spaceBelow <= contentHeight) {\n                if (mainRect.top > contentHeight) {\n                    return 'up';\n                }\n                else {\n                    return 'down';\n                }\n            }\n            return 'down';\n        }\n        updateDeselectAll() {\n            if (!this.store || !this.settings) {\n                return;\n            }\n            const selected = this.store.getSelectedOptions();\n            const hasSelectedItems = selected && selected.length > 0;\n            const isMultiple = this.settings.isMultiple;\n            const allowDeselect = this.settings.allowDeselect;\n            const deselectButton = this.main.deselect.main;\n            const hideClass = this.classes.hide;\n            if (allowDeselect && !(isMultiple && !hasSelectedItems)) {\n                deselectButton.classList.remove(hideClass);\n            }\n            else {\n                deselectButton.classList.add(hideClass);\n            }\n        }\n    }\n\n    class Select {\n        constructor(select) {\n            this.listen = false;\n            this.observer = null;\n            this.select = select;\n            this.select.addEventListener('change', this.valueChange.bind(this), {\n                passive: true,\n            });\n            this.observer = new MutationObserver(this.observeCall.bind(this));\n            this.changeListen(true);\n        }\n        enable() {\n            this.select.disabled = false;\n        }\n        disable() {\n            this.select.disabled = true;\n        }\n        hideUI() {\n            this.select.tabIndex = -1;\n            this.select.style.display = 'none';\n            this.select.setAttribute('aria-hidden', 'true');\n        }\n        showUI() {\n            this.select.removeAttribute('tabindex');\n            this.select.style.display = '';\n            this.select.removeAttribute('aria-hidden');\n        }\n        changeListen(listen) {\n            this.listen = listen;\n            if (listen) {\n                if (this.observer) {\n                    this.observer.observe(this.select, {\n                        subtree: true,\n                        childList: true,\n                        attributes: true,\n                    });\n                }\n            }\n            if (!listen) {\n                if (this.observer) {\n                    this.observer.disconnect();\n                }\n            }\n        }\n        valueChange(ev) {\n            if (this.listen && this.onValueChange) {\n                this.onValueChange(this.getSelectedValues());\n            }\n            return true;\n        }\n        observeCall(mutations) {\n            if (!this.listen) {\n                return;\n            }\n            let classChanged = false;\n            let disabledChanged = false;\n            let optgroupOptionChanged = false;\n            for (const m of mutations) {\n                if (m.target === this.select) {\n                    if (m.attributeName === 'disabled') {\n                        disabledChanged = true;\n                    }\n                    if (m.attributeName === 'class') {\n                        classChanged = true;\n                    }\n                }\n                if (m.target.nodeName === 'OPTGROUP' || m.target.nodeName === 'OPTION') {\n                    optgroupOptionChanged = true;\n                }\n            }\n            if (classChanged && this.onClassChange) {\n                this.onClassChange(this.select.className.split(' '));\n            }\n            if (disabledChanged && this.onDisabledChange) {\n                this.changeListen(false);\n                this.onDisabledChange(this.select.disabled);\n                this.changeListen(true);\n            }\n            if (optgroupOptionChanged && this.onOptionsChange) {\n                this.changeListen(false);\n                this.onOptionsChange(this.getData());\n                this.changeListen(true);\n            }\n        }\n        getData() {\n            let data = [];\n            const nodes = this.select.childNodes;\n            for (const n of nodes) {\n                if (n.nodeName === 'OPTGROUP') {\n                    data.push(this.getDataFromOptgroup(n));\n                }\n                if (n.nodeName === 'OPTION') {\n                    data.push(this.getDataFromOption(n));\n                }\n            }\n            return data;\n        }\n        getDataFromOptgroup(optgroup) {\n            let data = {\n                id: optgroup.id,\n                label: optgroup.label,\n                selectAll: optgroup.dataset ? optgroup.dataset.selectall === 'true' : false,\n                closable: optgroup.dataset ? optgroup.dataset.closable : 'off',\n                options: [],\n            };\n            const options = optgroup.childNodes;\n            for (const o of options) {\n                if (o.nodeName === 'OPTION') {\n                    data.options.push(this.getDataFromOption(o));\n                }\n            }\n            return data;\n        }\n        getDataFromOption(option) {\n            return {\n                id: option.id,\n                value: option.value,\n                text: option.text,\n                html: option.dataset && option.dataset.html ? option.dataset.html : '',\n                selected: option.selected,\n                display: option.style.display === 'none' ? false : true,\n                disabled: option.disabled,\n                mandatory: option.dataset ? option.dataset.mandatory === 'true' : false,\n                placeholder: option.dataset.placeholder === 'true',\n                class: option.className,\n                style: option.style.cssText,\n                data: option.dataset,\n            };\n        }\n        getSelectedValues() {\n            let values = [];\n            const options = this.select.childNodes;\n            for (const o of options) {\n                if (o.nodeName === 'OPTGROUP') {\n                    const optgroupOptions = o.childNodes;\n                    for (const oo of optgroupOptions) {\n                        if (oo.nodeName === 'OPTION') {\n                            const option = oo;\n                            if (option.selected) {\n                                values.push(option.value);\n                            }\n                        }\n                    }\n                }\n                if (o.nodeName === 'OPTION') {\n                    const option = o;\n                    if (option.selected) {\n                        values.push(option.value);\n                    }\n                }\n            }\n            return values;\n        }\n        setSelected(value) {\n            this.changeListen(false);\n            const options = this.select.childNodes;\n            for (const o of options) {\n                if (o.nodeName === 'OPTGROUP') {\n                    const optgroup = o;\n                    const optgroupOptions = optgroup.childNodes;\n                    for (const oo of optgroupOptions) {\n                        if (oo.nodeName === 'OPTION') {\n                            const option = oo;\n                            option.selected = value.includes(option.value);\n                        }\n                    }\n                }\n                if (o.nodeName === 'OPTION') {\n                    const option = o;\n                    option.selected = value.includes(option.value);\n                }\n            }\n            this.changeListen(true);\n        }\n        updateSelect(id, style, classes) {\n            this.changeListen(false);\n            if (id) {\n                this.select.dataset.id = id;\n            }\n            if (style) {\n                this.select.style.cssText = style;\n            }\n            if (classes) {\n                this.select.className = '';\n                classes.forEach((c) => {\n                    if (c.trim() !== '') {\n                        this.select.classList.add(c.trim());\n                    }\n                });\n            }\n            this.changeListen(true);\n        }\n        updateOptions(data) {\n            this.changeListen(false);\n            this.select.innerHTML = '';\n            for (const d of data) {\n                if (d instanceof Optgroup) {\n                    this.select.appendChild(this.createOptgroup(d));\n                }\n                if (d instanceof Option) {\n                    this.select.appendChild(this.createOption(d));\n                }\n            }\n            this.select.dispatchEvent(new Event('change'));\n            this.changeListen(true);\n        }\n        createOptgroup(optgroup) {\n            const optgroupEl = document.createElement('optgroup');\n            optgroupEl.id = optgroup.id;\n            optgroupEl.label = optgroup.label;\n            if (optgroup.selectAll) {\n                optgroupEl.dataset.selectAll = 'true';\n            }\n            if (optgroup.closable !== 'off') {\n                optgroupEl.dataset.closable = optgroup.closable;\n            }\n            if (optgroup.options) {\n                for (const o of optgroup.options) {\n                    optgroupEl.appendChild(this.createOption(o));\n                }\n            }\n            return optgroupEl;\n        }\n        createOption(info) {\n            const optionEl = document.createElement('option');\n            optionEl.id = info.id;\n            optionEl.value = info.value;\n            optionEl.innerHTML = info.text;\n            if (info.html !== '') {\n                optionEl.setAttribute('data-html', info.html);\n            }\n            if (info.selected) {\n                optionEl.selected = info.selected;\n            }\n            if (info.disabled) {\n                optionEl.disabled = true;\n            }\n            if (info.display === false) {\n                optionEl.style.display = 'none';\n            }\n            if (info.placeholder) {\n                optionEl.setAttribute('data-placeholder', 'true');\n            }\n            if (info.mandatory) {\n                optionEl.setAttribute('data-mandatory', 'true');\n            }\n            if (info.class) {\n                info.class.split(' ').forEach((optionClass) => {\n                    optionEl.classList.add(optionClass);\n                });\n            }\n            if (info.data && typeof info.data === 'object') {\n                Object.keys(info.data).forEach((key) => {\n                    optionEl.setAttribute('data-' + kebabCase(key), info.data[key]);\n                });\n            }\n            return optionEl;\n        }\n        destroy() {\n            this.changeListen(false);\n            this.select.removeEventListener('change', this.valueChange.bind(this));\n            if (this.observer) {\n                this.observer.disconnect();\n                this.observer = null;\n            }\n            delete this.select.dataset.id;\n            this.showUI();\n        }\n    }\n\n    class SlimSelect {\n        constructor(config) {\n            var _a;\n            this.events = {\n                search: undefined,\n                searchFilter: (opt, search) => {\n                    return opt.text.toLowerCase().indexOf(search.toLowerCase()) !== -1;\n                },\n                addable: undefined,\n                beforeChange: undefined,\n                afterChange: undefined,\n                beforeOpen: undefined,\n                afterOpen: undefined,\n                beforeClose: undefined,\n                afterClose: undefined,\n            };\n            this.windowResize = debounce(() => {\n                if (!this.settings.isOpen && !this.settings.isFullOpen) {\n                    return;\n                }\n                this.render.moveContent();\n            });\n            this.windowScroll = debounce(() => {\n                if (!this.settings.isOpen && !this.settings.isFullOpen) {\n                    return;\n                }\n                this.render.moveContent();\n            });\n            this.documentClick = (e) => {\n                if (!this.settings.isOpen) {\n                    return;\n                }\n                if (e.target && !hasClassInTree(e.target, this.settings.id)) {\n                    this.close(e.type);\n                }\n            };\n            this.windowVisibilityChange = () => {\n                if (document.hidden) {\n                    this.close();\n                }\n            };\n            this.selectEl = (typeof config.select === 'string' ? document.querySelector(config.select) : config.select);\n            if (!this.selectEl) {\n                if (config.events && config.events.error) {\n                    config.events.error(new Error('Could not find select element'));\n                }\n                return;\n            }\n            if (this.selectEl.tagName !== 'SELECT') {\n                if (config.events && config.events.error) {\n                    config.events.error(new Error('Element isnt of type select'));\n                }\n                return;\n            }\n            if (this.selectEl.dataset.ssid) {\n                this.destroy();\n            }\n            this.settings = new Settings(config.settings);\n            const debounceEvents = ['afterChange', 'beforeOpen', 'afterOpen', 'beforeClose', 'afterClose'];\n            for (const key in config.events) {\n                if (!config.events.hasOwnProperty(key)) {\n                    continue;\n                }\n                if (debounceEvents.indexOf(key) !== -1) {\n                    this.events[key] = debounce(config.events[key], 100);\n                }\n                else {\n                    this.events[key] = config.events[key];\n                }\n            }\n            this.settings.disabled = ((_a = config.settings) === null || _a === void 0 ? void 0 : _a.disabled) ? config.settings.disabled : this.selectEl.disabled;\n            this.settings.isMultiple = this.selectEl.multiple;\n            this.settings.style = this.selectEl.style.cssText;\n            this.settings.class = this.selectEl.className.split(' ');\n            this.select = new Select(this.selectEl);\n            this.select.updateSelect(this.settings.id, this.settings.style, this.settings.class);\n            this.select.hideUI();\n            this.select.onValueChange = (values) => {\n                this.setSelected(values);\n            };\n            this.select.onClassChange = (classes) => {\n                this.settings.class = classes;\n                this.render.updateClassStyles();\n            };\n            this.select.onDisabledChange = (disabled) => {\n                if (disabled) {\n                    this.disable();\n                }\n                else {\n                    this.enable();\n                }\n            };\n            this.select.onOptionsChange = (data) => {\n                this.setData(data);\n            };\n            this.store = new Store(this.settings.isMultiple ? 'multiple' : 'single', config.data ? config.data : this.select.getData());\n            if (config.data) {\n                this.select.updateOptions(this.store.getData());\n            }\n            const callbacks = {\n                open: this.open.bind(this),\n                close: this.close.bind(this),\n                addable: this.events.addable ? this.events.addable : undefined,\n                setSelected: this.setSelected.bind(this),\n                addOption: this.addOption.bind(this),\n                search: this.search.bind(this),\n                beforeChange: this.events.beforeChange,\n                afterChange: this.events.afterChange,\n            };\n            this.render = new Render(this.settings, this.store, callbacks);\n            this.render.renderValues();\n            this.render.renderOptions(this.store.getData());\n            const selectAriaLabel = this.selectEl.getAttribute('aria-label');\n            const selectAriaLabelledBy = this.selectEl.getAttribute('aria-labelledby');\n            if (selectAriaLabel) {\n                this.render.main.main.setAttribute('aria-label', selectAriaLabel);\n            }\n            else if (selectAriaLabelledBy) {\n                this.render.main.main.setAttribute('aria-labelledby', selectAriaLabelledBy);\n            }\n            if (this.selectEl.parentNode) {\n                this.selectEl.parentNode.insertBefore(this.render.main.main, this.selectEl.nextSibling);\n            }\n            document.addEventListener('click', this.documentClick);\n            window.addEventListener('resize', this.windowResize, false);\n            if (this.settings.openPosition === 'auto') {\n                window.addEventListener('scroll', this.windowScroll, false);\n            }\n            document.addEventListener('visibilitychange', this.windowVisibilityChange);\n            if (this.settings.disabled) {\n                this.disable();\n            }\n            if (this.settings.alwaysOpen) {\n                this.open();\n            }\n            this.selectEl.slim = this;\n        }\n        enable() {\n            this.settings.disabled = false;\n            this.select.enable();\n            this.render.enable();\n        }\n        disable() {\n            this.settings.disabled = true;\n            this.select.disable();\n            this.render.disable();\n        }\n        getData() {\n            return this.store.getData();\n        }\n        setData(data) {\n            const selected = this.store.getSelected();\n            const err = this.store.validateDataArray(data);\n            if (err) {\n                if (this.events.error) {\n                    this.events.error(err);\n                }\n                return;\n            }\n            this.store.setData(data);\n            const dataClean = this.store.getData();\n            this.select.updateOptions(dataClean);\n            this.render.renderValues();\n            this.render.renderOptions(dataClean);\n            if (this.events.afterChange && !isEqual(selected, this.store.getSelected())) {\n                this.events.afterChange(this.store.getSelectedOptions());\n            }\n        }\n        getSelected() {\n            return this.store.getSelected();\n        }\n        setSelected(value, runAfterChange = true) {\n            const selected = this.store.getSelected();\n            this.store.setSelectedBy('value', Array.isArray(value) ? value : [value]);\n            const data = this.store.getData();\n            this.select.updateOptions(data);\n            this.render.renderValues();\n            if (this.render.content.search.input.value !== '') {\n                this.search(this.render.content.search.input.value);\n            }\n            else {\n                this.render.renderOptions(data);\n            }\n            if (runAfterChange && this.events.afterChange && !isEqual(selected, this.store.getSelected())) {\n                this.events.afterChange(this.store.getSelectedOptions());\n            }\n        }\n        addOption(option) {\n            const selected = this.store.getSelected();\n            if (!this.store.getDataOptions().some((o) => { var _a; return o.value === ((_a = option.value) !== null && _a !== void 0 ? _a : option.text); })) {\n                this.store.addOption(option);\n            }\n            const data = this.store.getData();\n            this.select.updateOptions(data);\n            this.render.renderValues();\n            this.render.renderOptions(data);\n            if (this.events.afterChange && !isEqual(selected, this.store.getSelected())) {\n                this.events.afterChange(this.store.getSelectedOptions());\n            }\n        }\n        open() {\n            if (this.settings.disabled || this.settings.isOpen) {\n                return;\n            }\n            if (this.events.beforeOpen) {\n                this.events.beforeOpen();\n            }\n            this.render.open();\n            if (this.settings.showSearch) {\n                this.render.searchFocus();\n            }\n            this.settings.isOpen = true;\n            setTimeout(() => {\n                if (this.events.afterOpen) {\n                    this.events.afterOpen();\n                }\n                if (this.settings.isOpen) {\n                    this.settings.isFullOpen = true;\n                }\n            }, this.settings.timeoutDelay);\n            if (this.settings.contentPosition === 'absolute') {\n                if (this.settings.intervalMove) {\n                    clearInterval(this.settings.intervalMove);\n                }\n                this.settings.intervalMove = setInterval(this.render.moveContent.bind(this.render), 500);\n            }\n        }\n        close(eventType = null) {\n            if (!this.settings.isOpen || this.settings.alwaysOpen) {\n                return;\n            }\n            if (this.events.beforeClose) {\n                this.events.beforeClose();\n            }\n            this.render.close();\n            if (this.render.content.search.input.value !== '') {\n                this.search('');\n            }\n            this.render.mainFocus(eventType);\n            this.settings.isOpen = false;\n            this.settings.isFullOpen = false;\n            setTimeout(() => {\n                if (this.events.afterClose) {\n                    this.events.afterClose();\n                }\n            }, this.settings.timeoutDelay);\n            if (this.settings.intervalMove) {\n                clearInterval(this.settings.intervalMove);\n            }\n        }\n        search(value) {\n            if (this.render.content.search.input.value !== value) {\n                this.render.content.search.input.value = value;\n            }\n            if (!this.events.search) {\n                this.render.renderOptions(value === '' ? this.store.getData() : this.store.search(value, this.events.searchFilter));\n                return;\n            }\n            this.render.renderSearching();\n            const searchResp = this.events.search(value, this.store.getSelectedOptions());\n            if (searchResp instanceof Promise) {\n                searchResp\n                    .then((data) => {\n                    this.render.renderOptions(this.store.partialToFullData(data));\n                })\n                    .catch((err) => {\n                    this.render.renderError(typeof err === 'string' ? err : err.message);\n                });\n                return;\n            }\n            else if (Array.isArray(searchResp)) {\n                this.render.renderOptions(this.store.partialToFullData(searchResp));\n            }\n            else {\n                this.render.renderError('Search event must return a promise or an array of data');\n            }\n        }\n        destroy() {\n            document.removeEventListener('click', this.documentClick);\n            window.removeEventListener('resize', this.windowResize, false);\n            if (this.settings.openPosition === 'auto') {\n                window.removeEventListener('scroll', this.windowScroll, false);\n            }\n            document.removeEventListener('visibilitychange', this.windowVisibilityChange);\n            this.store.setData([]);\n            this.render.destroy();\n            this.select.destroy();\n        }\n    }\n\n    return SlimSelect;\n\n}));\n"],"names":["$c4ebbd28ee7007ee$export$57b7d3a597416aa2","breedId","fetch","then","resp","ok","Error","statusText","json","$parcel$interopDefault","generateID","Math","random","toString","substring","hasClassInTree","element","className","hasClass","e","c","classList","contains","dataset","id","parentByClass","document","parentNode","debounce","func","wait","immediate","timeout","args","context","self","later","apply","callNow","clearTimeout","setTimeout","isEqual","a","b","JSON","stringify","kebabCase","str","result","replace","match","toLowerCase","toUpperCase","Settings","constructor","settings","this","style","class","isMultiple","isOpen","isFullOpen","intervalMove","disabled","undefined","alwaysOpen","showSearch","searchPlaceholder","searchText","searchingText","searchHighlight","closeOnSelect","contentLocation","body","contentPosition","openPosition","placeholderText","allowDeselect","hideSelected","showOptionTooltips","minSelected","maxSelected","timeoutDelay","maxValuesShown","maxValuesMessage","Optgroup","optgroup","label","selectAll","closable","options","o","push","Option","option","value","text","html","selected","display","mandatory","placeholder","data","Store","type","selectType","setData","validateDataArray","Array","isArray","dataObj","validateOption","partialToFullData","dataFinal","forEach","optOptions","length","setSelectedBy","getSelected","getData","filter","getDataOptions","addOption","concat","selectedType","selectedValues","firstOption","hasSelected","includes","selectedOptions","getSelectedOptions","opt","getSelectedIDs","selectedIDs","op","getOptgroupByID","getOptionByID","search","searchFilter","trim","includeOptgroup","dataSearch","getSelectType","Render","store","callbacks","classes","main","values","single","max","valueText","valueDelete","valueOut","deselect","deselectPath","arrow","arrowClose","arrowOpen","content","openAbove","openBelow","searchHighlighter","searching","addable","addablePath","list","optgroupLabel","optgroupLabelText","optgroupActions","optgroupSelectAll","optgroupSelectAllBox","optgroupSelectAllCheck","optgroupClosable","optionDelete","highlighted","open","close","error","hide","mainDiv","contentDiv","updateClassStyles","updateAriaAttributes","appendChild","enable","remove","input","disable","add","path","setAttribute","moveContent","selectedId","selectedOption","querySelector","ensureElementInView","removeAttribute","cssText","role","_a","createElement","tabIndex","onkeydown","key","highlight","click","onclick","stopPropagation","shouldDelete","before","after","beforeChange","setSelected","updateDeselectAll","afterChange","deselectSvg","createElementNS","arrowPath","svg","mainFocus","eventType","focus","preventScroll","placeholderOption","innerHTML","renderValues","renderMultipleValues","renderSingleValue","selectedSingle","singleValue","innerText","outerHTML","currentNodes","childNodes","textContent","removeNodes","i","node","getAttribute","n","hasChildNodes","removeChild","d","shouldAdd","String","multipleValue","insertBefore","insertAdjacentElement","deleteDiv","preventDefault","deleteSvg","deletePath","searchDiv","listDiv","putContent","moveContentAbove","moveContentBelow","searchReturn","readOnly","oninput","target","ctrlKey","plus","plusPath","inputValue","runFinish","oo","newOption","addableValue","Promise","searchFocus","getOptions","notPlaceholder","notDisabled","notHidden","query","from","querySelectorAll","dir","prevOption","prevParent","parentElement","selectOption","selectParent","renderError","errorDiv","renderSearching","searchingDiv","renderOptions","noResults","optgroupEl","allSelected","o1","selectAllText","selectAllSvg","selectAllBox","selectAllCheck","addEventListener","currentSelected","newSelected","s","map","optgroupClosableSvg","optgroupClosableArrow","some","o2","optionEl","split","dataClass","highlightText","currentTarget","elementID","shouldUpdate","destroy","completedString","regex","RegExp","matchStartPosition","index","matchEndPosition","originalTextFoundByRegex","mainHeight","offsetHeight","contentHeight","containerRect","getBoundingClientRect","margin","top","height","window","scrollY","left","scrollX","width","container","cTop","scrollTop","offsetTop","cBottom","clientHeight","eTop","eBottom","mainRect","innerHeight","hasSelectedItems","deselectButton","hideClass","Select","select","listen","observer","valueChange","bind","passive","MutationObserver","observeCall","changeListen","hideUI","showUI","observe","subtree","childList","attributes","disconnect","ev","onValueChange","getSelectedValues","mutations","classChanged","disabledChanged","optgroupOptionChanged","m","attributeName","nodeName","onClassChange","onDisabledChange","onOptionsChange","nodes","getDataFromOptgroup","getDataFromOption","selectall","optgroupOptions","updateSelect","updateOptions","createOptgroup","createOption","dispatchEvent","Event","info","optionClass","Object","keys","removeEventListener","SlimSelect","config","events","indexOf","beforeOpen","afterOpen","beforeClose","afterClose","windowResize","render","windowScroll","documentClick","windowVisibilityChange","hidden","selectEl","tagName","ssid","debounceEvents","hasOwnProperty","multiple","selectAriaLabel","selectAriaLabelledBy","nextSibling","slim","err","dataClean","runAfterChange","clearInterval","setInterval","searchResp","catch","message","factory","$85a5f86b715fe7db$var$refs","breedSelect","catInfo","loader","$85a5f86b715fe7db$var$isFirstClick","$85a5f86b715fe7db$var$createMarkup","name","join","console","log","markup","url","headers","insertAdjacentHTML"],"version":3,"file":"index.2c408ae4.js.map"}